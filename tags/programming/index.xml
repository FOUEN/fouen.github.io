<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Fouen</title>
    <link>https://fouen.github.io/tags/programming/</link>
    <description>Recent content in Programming on Fouen</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 Aug 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://fouen.github.io/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>leetcode - Power of Two</title>
      <link>https://fouen.github.io/post/programming/power_of_two/</link>
      <pubDate>Tue, 12 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://fouen.github.io/post/programming/power_of_two/</guid>
      <description>&lt;h1 id=&#34;power-of-two&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#power-of-two&#34;&gt;&lt;/a&gt;&#xA;Power of Two&#xA;&lt;/h1&gt;&lt;h2 id=&#34;description&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#description&#34;&gt;&lt;/a&gt;&#xA;Description&#xA;&lt;/h2&gt;&lt;p&gt;&lt;em&gt;Given an integer &lt;code&gt;n&lt;/code&gt;, return &lt;code&gt;true&lt;/code&gt; if it is a power of two. Otherwise, return &lt;code&gt;false&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;An integer &lt;code&gt;n&lt;/code&gt; is a power of two, if there exists an integer &lt;code&gt;x&lt;/code&gt; such that &lt;code&gt;n == 2x&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;example-1&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#example-1&#34;&gt;&lt;/a&gt;&#xA;&lt;em&gt;&lt;strong&gt;Example 1:&lt;/strong&gt;&lt;/em&gt;&#xA;&lt;/h4&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Input:&lt;/strong&gt; n = 1&lt;/em&gt;&#xA;&lt;em&gt;&lt;strong&gt;Output:&lt;/strong&gt; true&lt;/em&gt;&#xA;&lt;em&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; 20 = 1&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;example-2&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#example-2&#34;&gt;&lt;/a&gt;&#xA;&lt;em&gt;&lt;strong&gt;Example 2:&lt;/strong&gt;&lt;/em&gt;&#xA;&lt;/h4&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Input:&lt;/strong&gt; n = 16&lt;/em&gt;&#xA;&lt;em&gt;&lt;strong&gt;Output:&lt;/strong&gt; true&lt;/em&gt;&#xA;&lt;em&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; 24 = 16&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;example-3&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#example-3&#34;&gt;&lt;/a&gt;&#xA;&lt;em&gt;&lt;strong&gt;Example 3:&lt;/strong&gt;&lt;/em&gt;&#xA;&lt;/h4&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Input:&lt;/strong&gt; n = 3&lt;/em&gt;&#xA;&lt;em&gt;&lt;strong&gt;Output:&lt;/strong&gt; false&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>leetcode - Fruits Into Baskets II</title>
      <link>https://fouen.github.io/post/programming/f_i_b_ii/</link>
      <pubDate>Mon, 11 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://fouen.github.io/post/programming/f_i_b_ii/</guid>
      <description>&lt;h1 id=&#34;fruits-into-baskets-ii&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#fruits-into-baskets-ii&#34;&gt;&lt;/a&gt;&#xA;Fruits Into Baskets II&#xA;&lt;/h1&gt;&lt;h2 id=&#34;description&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#description&#34;&gt;&lt;/a&gt;&#xA;Description&#xA;&lt;/h2&gt;&lt;p&gt;&lt;em&gt;You are given two arrays of integers, &lt;code&gt;fruits&lt;/code&gt; and &lt;code&gt;baskets&lt;/code&gt;, each of length &lt;code&gt;n&lt;/code&gt;, where &lt;code&gt;fruits[i]&lt;/code&gt; represents the &lt;strong&gt;quantity&lt;/strong&gt; of the &lt;code&gt;ith&lt;/code&gt; type of fruit, and &lt;code&gt;baskets[j]&lt;/code&gt; represents the &lt;strong&gt;capacity&lt;/strong&gt; of the &lt;code&gt;jth&lt;/code&gt; basket.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;From left to right, place the fruits according to these rules:&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;Each fruit type must be placed in the &lt;strong&gt;leftmost available basket&lt;/strong&gt; with a capacity &lt;strong&gt;greater than or equal&lt;/strong&gt; to the quantity of that fruit type.&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Each basket can hold &lt;strong&gt;only one&lt;/strong&gt; type of fruit.&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;If a fruit type &lt;strong&gt;cannot be placed&lt;/strong&gt; in any basket, it remains &lt;strong&gt;unplaced&lt;/strong&gt;.&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;em&gt;Return the number of fruit types that remain unplaced after all possible allocations are made.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>leetcode - Contains Duplicate</title>
      <link>https://fouen.github.io/post/programming/contains_duplicate/</link>
      <pubDate>Sun, 10 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://fouen.github.io/post/programming/contains_duplicate/</guid>
      <description>&lt;h1 id=&#34;contains-duplicate&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#contains-duplicate&#34;&gt;&lt;/a&gt;&#xA;Contains Duplicate&#xA;&lt;/h1&gt;&lt;h2 id=&#34;description&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#description&#34;&gt;&lt;/a&gt;&#xA;Description&#xA;&lt;/h2&gt;&lt;p&gt;&lt;em&gt;Given an integer array &lt;code&gt;nums&lt;/code&gt;, return &lt;code&gt;true&lt;/code&gt; if any value appears &lt;strong&gt;at least twice&lt;/strong&gt; in the array, and return &lt;code&gt;false&lt;/code&gt; if every element is distinct.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;example-1&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#example-1&#34;&gt;&lt;/a&gt;&#xA;&lt;em&gt;&lt;strong&gt;Example 1:&lt;/strong&gt;&lt;/em&gt;&#xA;&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;Input: nums = [1,2,3,1]&#xD;&#xA;&#xD;&#xA;Output: true&#xD;&#xA;&#xD;&#xA;Explanation:&#xD;&#xA;&#xD;&#xA;The element 1 occurs at the indices 0 and 3.&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h4 id=&#34;example-2&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#example-2&#34;&gt;&lt;/a&gt;&#xA;&lt;em&gt;&lt;strong&gt;Example 2:&lt;/strong&gt;&lt;/em&gt;&#xA;&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;Input: nums = [1,2,3,4]&#xD;&#xA;&#xD;&#xA;Output: false&#xD;&#xA;&#xD;&#xA;Explanation:&#xD;&#xA;&#xD;&#xA;All elements are distinct.&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h4 id=&#34;example-3&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#example-3&#34;&gt;&lt;/a&gt;&#xA;&lt;em&gt;&lt;strong&gt;Example 3:&lt;/strong&gt;&lt;/em&gt;&#xA;&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;Input: nums = [1,1,1,3,3,4,3,2,4,2]&#xD;&#xA;&#xD;&#xA;Output: true&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h4 id=&#34;constraints&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#constraints&#34;&gt;&lt;/a&gt;&#xA;&lt;em&gt;&lt;strong&gt;Constraints:&lt;/strong&gt;&lt;/em&gt;&#xA;&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;- `1 &amp;lt;= nums.length &amp;lt;= 105`&#xD;&#xA;- `-109 &amp;lt;= nums[i] &amp;lt;= 109`&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;solve&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#solve&#34;&gt;&lt;/a&gt;&#xA;Solve&#xA;&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;containsDuplicate&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;nums&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;nums&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;) =&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nums&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;nums&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nums&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
